# ctrl.yaml
---
- hosts: controller
  become: yes
  vars:
    # Pass variables from Vagrant to Ansible
    node_count: "{{ node_count | default(2) }}"
    ctrl_cpus: "{{ ctrl_cpus | default(1) }}"
    ctrl_memory: "{{ ctrl_memory | default(4096) }}"
    node_cpus: "{{ node_cpus | default(2) }}"
    node_memory: "{{ node_memory | default(6144) }}"
  tasks:
    - name: "Print controller configuration"
      debug:
        msg: "Controller node with {{ ctrl_cpus }} CPUs and {{ ctrl_memory }}MB memory, managing {{ node_count }} worker nodes"

# Step 13: Initialize Kubernetes Cluster
    - name: "Check if Kubernetes is already initialized (admin.conf exists)"
      stat:
        path: /etc/kubernetes/admin.conf
      register: kubeadm_config

    - name: "Kubernetes already initialized â€” skipping kubeadm init"
      debug:
        msg: "Kubernetes is already initialized; skipping cluster init step"
      when: kubeadm_config.stat.exists

    - name: "Initialize Kubernetes cluster with kubeadm"
      command: >
        kubeadm init
        --apiserver-advertise-address=192.168.56.100
        --node-name=ctrl
        --pod-network-cidr=10.244.0.0/16
      when: not kubeadm_config.stat.exists
      register: kubeadm_result
      become: true

    - name: "Output from kubeadm init"
      debug:
        var: kubeadm_result.stdout_lines
      when: kubeadm_result is defined and not kubeadm_config.stat.exists

# Step 14: Set up kubeconfig for vagrant and host access
    - name: "Ensure .kube directory exists for vagrant user"
      file:
        path: /home/vagrant/.kube
        state: directory
        owner: vagrant
        group: vagrant
        mode: '0755'
      become: true

    - name: "Copy Kubernetes admin.conf to vagrant's kube config"
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/vagrant/.kube/config
        remote_src: yes
        owner: vagrant
        group: vagrant
        mode: '0644'
      become: true

    - name: "Copy admin.conf to shared synced folder (host access)"
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /vagrant/admin.conf
        remote_src: yes
        owner: vagrant
        group: vagrant
        mode: '0644'
      become: true

# Step 15: Install Flannel network plugin
    - name: "Download Flannel CNI manifest"
      ansible.builtin.copy:
        src: kube-flannel.yml
        dest: /tmp/kube-flannel.yml

    - name: "Apply Flannel network plugin to the cluster"
      command: kubectl apply -f /tmp/kube-flannel.yml
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      register: flannel_result

    - name: "Flannel network deployed"
      debug:
        var: flannel_result.stdout_lines
      when: flannel_result is defined

# Step 16: Install Helm 

    - name: Ensure apt-transport-https is installed (required for HTTPS APT)
      apt:
        name: apt-transport-https
        state: present
        update_cache: yes


    - name: Add Helm signing key
      ansible.builtin.shell: |
        curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | tee /usr/share/keyrings/helm.gpg > /dev/null
      
    - name: Add Helm APT repository
      shell: |
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" > /etc/apt/sources.list.d/helm-stable-debian.list
      
      
    - name: Update APT package index
      ansible.builtin.apt:
        update_cache: yes
      register: apt_update

    - name: Install Helm package using Ansible apt module
      ansible.builtin.apt:
        name: helm
        state: present


    # Step 17: Install Helm Diff plugin
    - name: Install Helm Diff plugin if not already installed
      ansible.builtin.command: >
        helm plugin install https://github.com/databus23/helm-diff
      args:
        creates: ~/.local/share/helm/plugins/helm-diff
      environment:
        HOME: "{{ ansible_env.HOME }}"
      register: helm_diff_install

    - name: Confirm Helm Diff plugin installation
      debug:
        var: helm_diff_install
      when: helm_diff_install is defined
