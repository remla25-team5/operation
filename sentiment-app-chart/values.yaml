replica_count: 1

app:
  image: ghcr.io/remla25-team5/app
  tag: latest
  port: 8080
  tagv2: v2.latest

modelService:
  image: ghcr.io/remla25-team5/model-service
  tag: latest
  port: 5000
  tagv2: v2.latest
  
persistentVolumeSize: 100Mi

monitoring:
  enabled: false
  scrapeInterval: 15s

gmailEmail: "@gmail.com"
emailPassword: value

grafana:
  ingress:
    host: grafana.local
    servicePort: 80
  
istioEnabled: true


kube-prometheus-stack:
  grafana:
    podAnnotations:
      sidecar.istio.io/inject: "false"    
  prometheus: 
    prometheusSpec: 
      podAnnotations: 
        sidecar.istio.io/inject: "false" 
  alertmanager: 
    podAnnotations: 
      sidecar.istio.io/inject: "false"
  kubeStateMetrics: 
    podAnnotations: 
      sidecar.istio.io/inject: "false"
  prometheusOperator:
    podAnnotations: 
      sidecar.istio.io/inject: "false"
    admissionWebhooks:
    # Istio tries to inject sidecars into all pods, including those managed by the Prometheus Operator.
    # The prometheus certificate generation pods created are temporary and the sidecar injection tries to continue to run even tho the pod has exited.
    # This causes the intallation to timeout as the sidecar injection tries to inject into pods that are not running.
    # To avoid this, we disable the sidecar injection for the temporary webhook pods created by the Prometheus Operator.
      patch:
        enabled: true 
        podAnnotations:
          sidecar.istio.io/inject: "false"

